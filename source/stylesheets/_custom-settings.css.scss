//
// FOUNDATION SETTINGS
//

// This is the default html and body font-size for the base rem value.
// $rem-base: 16px;

// Allows the use of rem-calc() or lower-bound() in your settings
@import "functions";

/* 
	My custom settings. These variables are copied from _settings.css
	This file will only contain uncommented settings that are actually used in the theme.
*/


// Media Query Ranges
$small-range: (0em, 40em);
$medium-range: (40.063em, 64em);
$large-range: (64.063em, 90em);
$xlarge-range: (90.063em, 120em);
$xxlarge-range: (120.063em);

$screen: "only screen";

$landscape: "#{$screen} and (orientation: landscape)";
$portrait: "#{$screen} and (orientation: portrait)";

$small-up: $screen;
$small-only: "#{$screen} and (max-width: #{upper-bound($small-range)})";

$medium-up: "#{$screen} and (min-width:#{lower-bound($medium-range)})";
$medium-only: "#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})";

 $large-up: "#{$screen} and (min-width:#{lower-bound($large-range)})";
$large-only: "#{$screen} and (min-width:#{lower-bound($large-range)}) and (max-width:#{upper-bound($large-range)})";

$xlarge-up: "#{$screen} and (min-width:#{lower-bound($xlarge-range)})";
$xlarge-only: "#{$screen} and (min-width:#{lower-bound($xlarge-range)}) and (max-width:#{upper-bound($xlarge-range)})";

$xxlarge-up: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)})";
$xxlarge-only: "#{$screen} and (min-width:#{lower-bound($xxlarge-range)}) and (max-width:#{upper-bound($xxlarge-range)})";

// Legacy
// $small: $medium-up;
// $medium: $medium-up;
// $large: $large-up;


// Foundation color naming conventions
$white       : #FFFFFF;
$ghost       : #FAFAFA;
$snow        : #F9F9F9;
$vapor       : #F6F6F6;
$white-smoke : #F5F5F5;
$silver      : #EFEFEF;
$smoke       : #EEEEEE;
$gainsboro   : #DDDDDD;
$iron        : #CCCCCC;
$base        : #AAAAAA;
$aluminum    : #999999;
$jumbo       : #888888;
$monsoon     : #777777;
$steel       : #666666;
$charcoal    : #555555;
$tuatara     : #444444;
$oil         : #333333;
$jet         : #222222;
$black       : #000000;

$carrot      : #ff7321;
$dk-carrot   : scale-color($carrot, $lightness: -20%);
$lt-carrot   : scale-color($carrot, $lightness: +20%);

$carrot-green: #5D9E00;
$lt-carrot-green: scale-color($carrot-green, $lightness: +20%);
$dk-carrot-green: scale-color($carrot-green, $lightness: -20%);

$primary-text: #212121;
$secondary-text: #727272;
$divider     : #B6B6B6;
$icon-text   : $white;

// We use these as default colors throughout
$primary-color: $carrot;
$secondary-color: $carrot-green;
$alert-color: #f04124;
$success-color: #43AC6A;
$warning-color: #f08a24;
$info-color: #a0d3e8;


// We use these to define default font stacks
$font-family-sans-serif: "Open Sans", Helvetica, Roboto, Arial, sans-serif;
$font-family-serif: Georgia, Cambria, "Times New Roman", Times, serif;
$font-family-monospace: Consolas, "Liberation Mono", Courier, monospace;
$font-family-header: $font-family-sans-serif;

//$font-family-header: "Titillium Web", sans-serif;

// We use these to define default font weights
$font-weight-normal: normal !default;
$font-weight-bold: bold !default;




// We use these to control various global styles
$body-bg: $white;
$body-font-color: $primary-text;
$body-font-family: $font-family-sans-serif;
$body-font-weight: $font-weight-normal;
$body-font-style: normal;
$header-font-weight: 600;
$header-text-rendering: optimizeLegibility;
$topbar-link-weight: bold;
$header-font-family: $font-family-header;
$header-font-color: $secondary-text;
$anchor-font-color: $lt-carrot;
$anchor-font-color-hover: $lt-carrot-green;



// We use these to control header font sizes
$h1-font-size: rem-calc(44);
$h2-font-size: rem-calc(28);
$h3-font-size: rem-calc(24);
$h4-font-size: rem-calc(20);
$h5-font-size: rem-calc(18);
$h6-font-size: 1rem;

//Header font weight
h3, h4, h5, h6{font-weight: 400 !important;}


.full-width-bar {
  background: $lt-carrot;
}


// 34. Top Bar
// - - - - - - - - - - - - - - - - - - - - - - - - -

// $include-html-top-bar-classes: $include-html-classes;

//Background color for the top bar
$topbar-bg-color: $white;
$topbar-bg: $topbar-bg-color;

// Height and margin
$topbar-height: 3rem;
// $topbar-margin-bottom: 0;

// Controlling the styles for the title in the top bar
// $topbar-title-weight: $font-weight-normal;
// $topbar-title-font-size: rem-calc(17);

// Set the link colors and styles for top-level nav
$topbar-link-color: $lt-carrot;
$topbar-link-color-hover: $lt-carrot-green;
$topbar-link-color-active: $dk-carrot;
$topbar-link-color-active-hover: $lt-carrot-green;
// $topbar-link-weight: $font-weight-normal;
// $topbar-link-font-size: rem-calc(13);
// $topbar-link-hover-lightness: -10%; // Darken by 10%
$topbar-link-bg: $topbar-bg;
$topbar-link-bg-hover: $topbar-bg-color;
$topbar-link-bg-color-hover: $divider;
$topbar-link-bg-active: $topbar-bg;
$topbar-link-bg-active-hover: $topbar-bg-color;
// $topbar-link-font-family: $body-font-family;
// $topbar-link-text-transform: none;
// $topbar-link-padding: ($topbar-height / 3);
// $topbar-back-link-size: rem-calc(18);
 $topbar-link-dropdown-padding: 1rem !important;
// $topbar-button-font-size: .75rem;
// $topbar-button-top: 7px;

// Style the top bar dropdown elements
$topbar-dropdown-bg: $white;
$topbar-dropdown-link-color: $topbar-link-color;
$topbar-dropdown-link-color-hover: $topbar-link-color-hover;
$topbar-dropdown-link-bg: $white;
$topbar-dropdown-link-bg-hover: $topbar-bg-color;
$topbar-dropdown-link-weight: $font-weight-bold;
// $topbar-dropdown-toggle-size: 5px;
// $topbar-dropdown-toggle-color: $white;
// $topbar-dropdown-toggle-alpha: .4;

// $topbar-dropdown-label-color: $monsoon;
// $topbar-dropdown-label-text-transform: uppercase;
// $topbar-dropdown-label-font-weight: $font-weight-bold;
// $topbar-dropdown-label-font-size: rem-calc(10);
$topbar-dropdown-label-bg: $white;

// Top menu icon styles
// $topbar-menu-link-transform: uppercase;
// $topbar-menu-link-font-size: rem-calc(13);
// $topbar-menu-link-weight: $font-weight-bold;
$topbar-menu-link-color: $lt-carrot;
$topbar-menu-icon-color: $lt-carrot;
// $topbar-menu-link-color-toggled: $jumbo;
// $topbar-menu-icon-color-toggled: $jumbo;
// $topbar-menu-icon-position: $opposite-direction; // Change to $default-float for a left menu icon

// Transitions and breakpoint styles
// $topbar-transition-speed: 300ms;
// Using rem-calc for the below breakpoint causes issues with top bar
// $topbar-breakpoint: #{lower-bound($medium-range)}; // Change to 9999px for always mobile layout
// $topbar-media-query: "#{$screen} and (min-width:#{lower-bound($topbar-breakpoint)})";

// Top-bar input styles
// $topbar-input-height: rem-calc(28);

// Divider Styles
$topbar-divider-border-bottom: $dk-carrot;
// $topbar-divider-border-top: solid 1px scale-color($topbar-bg-color, $lightness: -50%);

// Sticky Class
$topbar-sticky-class: ".sticky";
// $topbar-arrows: true; //Set false to remove the triangle icon from the menu item
// $topbar-dropdown-arrows: true; //Set false to remove the \00bb >> text from dropdown subnavigation li//
.top-bar-container{border-bottom: 1px solid $divider;}

// Media query breakpoints
$small-breakpoint:  em-calc(640);
$medium-breakpoint: em-calc(1024);
$topbar-breakpoint: em-calc(820);
$large-breakpoint:  em-calc(1440);
$xlarge-breakpoint: em-calc(1920);

// 11. Forms
// - - - - - - - - - - - - - - - - - - - - - - - - -

// $include-html-form-classes: $include-html-classes;

// We use this to set the base for lots of form spacing and positioning styles
// $form-spacing: rem-calc(16);

// We use these to style the labels in different ways
// $form-label-pointer: pointer;
$form-label-font-size: rem-calc(10);
// $form-label-font-weight: $font-weight-normal;
$form-label-line-height: 1;
$form-label-font-color: $white;
// $form-label-small-transform: capitalize;
// $form-label-bottom-margin: 0;
// $input-font-family: inherit;
$input-font-color: $secondary-text;
// $input-font-size: rem-calc(14);
// $input-bg-color: $white;
// $input-focus-bg-color: scale-color($white, $lightness: -2%);
// $input-border-color: scale-color($white, $lightness: -20%);
// $input-focus-border-color: scale-color($white, $lightness: -40%);
// $input-border-style: solid;
// $input-border-width: 1px;
// $input-border-radius: $global-radius;
// $input-disabled-bg: $gainsboro;
// $input-disabled-cursor: $cursor-default-value;
// $input-box-shadow: inset 0 1px 2px rgba(0,0,0,0.1);
// $input-include-glowing-effect: false;

// We use these to style the fieldset border and spacing.
$fieldset-border-style: none;
// $fieldset-border-width: 1px;
// $fieldset-border-color: $gainsboro;
// $fieldset-padding: rem-calc(20);
// $fieldset-margin: rem-calc(18 0);

// We use these to style the legends when you use them
// $legend-bg: $white;
// $legend-font-weight: $font-weight-bold;
// $legend-padding: rem-calc(0 3);

// We use these to style the prefix and postfix input elements
// $input-prefix-bg: scale-color($white, $lightness: -5%);
// $input-prefix-border-color: scale-color($white, $lightness: -20%);
// $input-prefix-border-size: 1px;
// $input-prefix-border-type: solid;
// $input-prefix-overflow: hidden;
// $input-prefix-font-color: $oil;
// $input-prefix-font-color-alt: $white;

// We use this setting to turn on/off HTML5 number spinners (the up/down arrows)
// $input-number-spinners: true;

// We use these to style the error states for inputs and labels
// $input-error-message-padding: rem-calc(6 9 9);
// $input-error-message-top: -1px;
// $input-error-message-font-size: rem-calc(12);
// $input-error-message-font-weight: $font-weight-normal;
// $input-error-message-font-style: italic;
// $input-error-message-font-color: $white;
// $input-error-message-bg-color: $alert-color;
// $input-error-message-font-color-alt: $oil;

// We use this to style the glowing effect of inputs when focused
// $glowing-effect-fade-time: .45s;
// $glowing-effect-color: $input-focus-border-color;

// We use this to style the transition when inputs are focused and when the glowing effect is disabled.
// $input-transition-fade-time: 0.12s;
// $input-transition-fade-timing-function: linear;

// Select variables
// $select-bg-color: $ghost;
// $select-hover-bg-color: scale-color($select-bg-color, $lightness: -3%);

// 18. Off-canvas
// - - - - - - - - - - - - - - - - - - - - - - - - -

// Off Canvas Tab Bar Variables
// $include-html-off-canvas-classes: $include-html-classes;

$tabbar-bg: $white;
// $tabbar-height: rem-calc(45);
// $tabbar-icon-width: $tabbar-height;
// $tabbar-line-height: $tabbar-height;
$tabbar-color: $carrot-green;
// $tabbar-middle-padding: 0 rem-calc(10);

// Off Canvas Divider Styles
$tabbar-left-section-border: solid 1px $lt-carrot;
// $tabbar-right-section-border: $tabbar-left-section-border;


// Off Canvas Tab Bar Headers
$tabbar-header-color: $lt-carrot;
// $tabbar-header-weight: $font-weight-bold;
// $tabbar-header-line-height: $tabbar-height;
// $tabbar-header-margin: 0;

// Off Canvas Menu Variables
// $off-canvas-width: rem-calc(250);
$off-canvas-bg: $white;
// $off-canvas-bg-hover: scale-color($tabbar-bg, $lightness: -30%);
// $off-canvas-bg-active: scale-color($tabbar-bg, $lightness: -30%);

// Off Canvas Menu List Variables
// $off-canvas-label-padding: .3rem rem-calc(15);
$off-canvas-label-color: $lt-carrot;
// $off-canvas-label-text-transform: uppercase;
// $off-canvas-label-font-size: rem-calc(12);
// $off-canvas-label-font-weight: $font-weight-bold;
$off-canvas-label-bg: $white;
$off-canvas-label-border-top: $divider;
// $off-canvas-label-border-bottom: none;
// $off-canvas-label-margin:0;
// $off-canvas-link-padding: rem-calc(10, 15);
$off-canvas-link-color: $lt-carrot;
 $off-canvas-link-border-bottom: 1px solid $divider;
// $off-canvas-back-bg: #444;
// $off-canvas-back-border-top: $off-canvas-label-border-top;
// $off-canvas-back-border-bottom: $off-canvas-label-border-bottom;
// $off-canvas-back-hover-bg: scale-color($off-canvas-back-bg, $lightness: -30%);
// $off-canvas-back-hover-border-top: 1px solid scale-color($off-canvas-label-bg, $lightness: 14%);
// $off-canvas-back-hover-border-bottom: none;

// Off Canvas Menu Icon Variables
$tabbar-menu-icon-color: $lt-carrot;
// $tabbar-menu-icon-hover: scale-color($tabbar-menu-icon-color, $lightness: -30%);

// $tabbar-menu-icon-text-indent: rem-calc(35);
// $tabbar-menu-icon-width: $tabbar-icon-width;
// $tabbar-menu-icon-height: $tabbar-height;
// $tabbar-menu-icon-padding: 0;

// $tabbar-hamburger-icon-width: rem-calc(16);
// $tabbar-hamburger-icon-left: false;
// $tabbar-hamburger-icon-top: false;
// $tabbar-hamburger-icon-thickness: 1px;
// $tabbar-hamburger-icon-gap: 6px;

// Off Canvas Back-Link Overlay
$off-canvas-overlay-transition: background 300ms ease;
$off-canvas-overlay-cursor: pointer;
$off-canvas-overlay-box-shadow: -4px 0 4px rgba($black, .5), 4px 0 4px rgba($black, .5);
$off-canvas-overlay-background: rgba($white, .2);
$off-canvas-overlay-background-hover: rgba($white, .05);

// Transition Variables
$menu-slide: "transform 500ms ease";

// Dropdown

// $include-html-dropdown-classes: $include-html-classes;

// We use these to controls height and width styles.
$f-dropdown-max-width: 500px;
// $f-dropdown-height: auto;
// $f-dropdown-max-height: none;
// $f-dropdown-margin-top: 2px;

// We use this to control the background color
 $f-dropdown-bg: $lt-carrot;

// We use this to set the border styles for dropdowns.
 $f-dropdown-border-style: solid;
 $f-dropdown-border-width: 0px;
// $f-dropdown-border-color: scale-color(#fff, $lightness: -20%);

// We use these to style the triangle pip.
// $f-dropdown-triangle-size: 6px;
// $f-dropdown-triangle-color: #fff;
// $f-dropdown-triangle-side-offset: 10px;

// We use these to control styles for the list elements.
// $f-dropdown-list-style: none;
// $f-dropdown-font-color: #555;
// $f-dropdown-font-size: rem-calc(14);
// $f-dropdown-list-padding: rem-calc(5, 10);
// $f-dropdown-line-height: rem-calc(18);
// $f-dropdown-list-hover-bg: #eeeeee  ;
// $dropdown-mobile-default-float: 0;

// We use this to control the styles for when the dropdown has custom content.
// $f-dropdown-content-padding: rem-calc(20);

// Dropdown Buttons

// $include-html-button-classes: $include-html-classes;

// We use these to set the color of the pip in dropdown buttons
// $dropdown-button-pip-color: #fff;
// $dropdown-button-pip-color-alt: #333;

// $button-pip-tny: rem-calc(6);
// $button-pip-sml: rem-calc(7);
// $button-pip-med: rem-calc(9);
// $button-pip-lrg: rem-calc(11);

// We use these to style tiny dropdown buttons
// $dropdown-button-padding-tny: $button-pip-tny * 7;
// $dropdown-button-pip-size-tny: $button-pip-tny;
// $dropdown-button-pip-opposite-tny: $button-pip-tny * 3;
// $dropdown-button-pip-top-tny: -$button-pip-tny / 2 + rem-calc(1);

// We use these to style small dropdown buttons
// $dropdown-button-padding-sml: $button-pip-sml * 7;
// $dropdown-button-pip-size-sml: $button-pip-sml;
// $dropdown-button-pip-opposite-sml: $button-pip-sml * 3;
// $dropdown-button-pip-top-sml: -$button-pip-sml / 2 + rem-calc(1);

// We use these to style medium dropdown buttons
// $dropdown-button-padding-med: $button-pip-med * 6 + rem-calc(3);
// $dropdown-button-pip-size-med: $button-pip-med - rem-calc(3);
// $dropdown-button-pip-opposite-med: $button-pip-med * 2.5;
// $dropdown-button-pip-top-med: -$button-pip-med / 2 + rem-calc(2);

// We use these to style large dropdown buttons
// $dropdown-button-padding-lrg: $button-pip-lrg * 5 + rem-calc(3);
// $dropdown-button-pip-size-lrg: $button-pip-lrg - rem-calc(6);
// $dropdown-button-pip-opposite-lrg: $button-pip-lrg * 2.5;
// $dropdown-button-pip-top-lrg: -$button-pip-lrg / 2 + rem-calc(3);

// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

@import 'global';

//
// @variables
//
$include-html-button-classes: $include-html-classes !default;

// We use these to build padding for buttons.
$button-tny: rem-calc(10) !default;
$button-sml: rem-calc(14) !default;
$button-med: rem-calc(16) !default;
$button-lrg: rem-calc(18) !default;

// We use this to control the display property.
$button-display: inline-block !default;
$button-margin-bottom: rem-calc(20) !default;

// We use these to control button text styles.
$button-font-family: $body-font-family !default;
$button-font-color: $white !default;
$button-font-color-alt: $oil !default;
$button-font-tny: rem-calc(11) !default;
$button-font-sml: rem-calc(13) !default;
$button-font-med: rem-calc(16) !default;
$button-font-lrg: rem-calc(20) !default;
$button-font-weight: $font-weight-normal !default;
$button-font-align: center !default;

// We use these to control various hover effects.
$button-function-factor: -20% !default;

// We use these to control button border styles.
$button-border-width: 0 !default;
$button-border-style: solid !default;
$button-bg-color: $primary-color !default;
$button-bg-hover: scale-color($button-bg-color, $lightness: $button-function-factor) !default;
$button-border-color: $button-bg-hover !default;
$secondary-button-bg-color: $secondary-color !default;
$secondary-button-bg-hover: scale-color($secondary-color, $lightness: $button-function-factor) !default;
$secondary-button-border-color: $secondary-button-bg-hover !default;
$success-button-bg-color: $success-color !default;
$success-button-bg-hover: scale-color($success-color, $lightness: $button-function-factor) !default;
$success-button-border-color: $success-button-bg-hover !default;
$alert-button-bg-color: $alert-color !default;
$alert-button-bg-hover: scale-color($alert-color, $lightness: $button-function-factor) !default;
$alert-button-border-color: $alert-button-bg-hover !default;
$warning-button-bg-color: $warning-color !default;
$warning-button-bg-hover: scale-color($warning-color, $lightness: $button-function-factor) !default;
$warning-button-border-color: $warning-button-bg-hover !default;
$info-button-bg-color: $info-color !default;
$info-button-bg-hover: scale-color($info-color, $lightness: $button-function-factor) !default;
$info-button-border-color: $info-button-bg-hover !default;

// We use this to set the default radius used throughout the core.
$button-radius: $global-radius !default;
$button-round: $global-rounded !default;

// We use this to set default opacity and cursor for disabled buttons.
$button-disabled-opacity: .7 !default;
$button-disabled-cursor: $cursor-default-value !default;


//
// @MIXIN
//
// We use this mixin to create a default button base.
//
// $style - Sets base styles. Can be set to false. Default: true.
// $display - Used to control display property. Default: $button-display || inline-block

@mixin button-base($style:true, $display:$button-display) {
  @if $style {
    -webkit-appearance: none;
    -moz-appearance: none;
    border-radius:0;
    border-style: $button-border-style;
    border-width: $button-border-width;
    cursor: $cursor-pointer-value;
    font-family: $button-font-family;
    font-weight: $button-font-weight;
    line-height: normal;
    margin: 0 0 $button-margin-bottom;
    position: relative;
    text-align: $button-font-align;
    text-decoration: none;
  }
  @if $display { display: $display; }
}

// @MIXIN
//
// We use this mixin to add button size styles
//
// $padding - Used to build padding for buttons Default: $button-med ||= rem-calc(12)
// $full-width - We can set $full-width:true to remove side padding extend width - Default: false

@mixin button-size($padding:$button-med, $full-width:false) {

  // We control which padding styles come through,
  // these can be turned off by setting $padding:false
  @if $padding {
    padding: $padding ($padding * 2) ($padding + rem-calc(1)) ($padding * 2);
    // We control the font-size based on mixin input.
    @if      $padding == $button-med { font-size: $button-font-med; }
    @else if $padding == $button-tny { font-size: $button-font-tny; }
    @else if $padding == $button-sml { font-size: $button-font-sml; }
    @else if $padding == $button-lrg { font-size: $button-font-lrg; }
  }

  // We can set $full-width:true to remove side padding extend width.
  @if $full-width {
    // We still need to check if $padding is set.
    @if $padding {
      padding-bottom: $padding + rem-calc(1);
      padding-top: $padding;
    } @else if $padding == false {
      padding-bottom:0;
      padding-top:0;
    }
    padding-left: $button-med;
    padding-right: $button-med;
    width: 100%;
  }
}

// @MIXIN
//
// we use this mixin to create the button hover and border colors

// @MIXIN
//
// We use this mixin to add button color styles
//
// $bg - Background color. We can set $bg:false for a transparent background. Default: $primary-color.
// $radius - If true, set to button radius which is $button-radius || explicitly set radius amount in px (ex. $radius:10px). Default: false
// $disabled - We can set $disabled:true to create a disabled transparent button. Default: false
// $bg-hover - Button Hover Background Color. Default: $button-bg-hover
// $border-color - Button Border Color. Default: $button-border-color
@mixin button-style($bg:$button-bg-color, $radius:false, $disabled:false, $bg-hover:null, $border-color:null) {

  // We control which background styles are used,
  // these can be removed by setting $bg:false
  @if $bg {

    @if $bg-hover == null {
      $bg-hover: if($bg == $button-bg-color, $button-bg-hover, scale-color($bg, $lightness: $button-function-factor));
    }

    @if $border-color == null {
      $border-color: if($bg == $button-bg-color, $button-border-color, scale-color($bg, $lightness: $button-function-factor));
    }

    // This find the lightness percentage of the background color.
    $bg-lightness: lightness($bg);
    $bg-hover-lightness: lightness($bg-hover);

    background-color: $bg;
    border-color: $border-color;
    &:hover,
    &:focus { background-color: $bg-hover; }

    // We control the text color for you based on the background color.
    color: if($bg-lightness > 70%, $button-font-color-alt, $button-font-color);

    &:hover,
    &:focus {
      color: if($bg-hover-lightness > 70%, $button-font-color-alt, $button-font-color);
    }
  }

  // We can set $disabled:true to create a disabled transparent button.
  @if $disabled {
    box-shadow: none;
    cursor: $button-disabled-cursor;
    opacity: $button-disabled-opacity;
    &:hover,
    &:focus { background-color: $bg; }
  }

  // We can control how much button radius is used.
  @if $radius == true { @include radius($button-radius); }
  @else if $radius { @include radius($radius); }

}

// @MIXIN
//
// We use this to quickly create buttons with a single mixin. As @jaredhardy puts it, "the kitchen sink mixin"
//
// $padding - Used to build padding for buttons Default: $button-med ||= rem-calc(12)
// $bg - Primary color set in settings file. Default: $button-bg.
// $radius - If true, set to button radius which is $global-radius || explicitly set radius amount in px (ex. $radius:10px). Default:false.
// $full-width - We can set $full-width:true to remove side padding extend width. Default:false.
// $disabled - We can set $disabled:true to create a disabled transparent button. Default:false.
// $is-prefix - Not used? Default:false.
// $bg-hover - Button Hover Color - Default null - see button-style mixin
// $border-color - Button Border Color - Default null - see button-style mixin
// $transition - We can control whether or not to include the background-color transition property - Default:true.
@mixin button($padding:$button-med, $bg:$button-bg-color, $radius:false, $full-width:false, $disabled:false, $is-prefix:false, $bg-hover:null, $border-color:null, $transition: true) {
  @include button-base;
  @include button-size($padding, $full-width);
  @include button-style($bg, $radius, $disabled, $bg-hover, $border-color);

  @if $transition {
    @include single-transition(background-color);
  }
}


@include exports("button") {
  @if $include-html-button-classes {

    // Default styles applied outside of media query
    button, .button {
      @include button-base;
      @include button-size;
      @include button-style;

      @include single-transition(background-color);

      &.secondary { @include button-style($bg:$secondary-button-bg-color, $bg-hover:$secondary-button-bg-hover, $border-color:$secondary-button-border-color); }
      &.success   { @include button-style($bg:$success-button-bg-color, $bg-hover:$success-button-bg-hover, $border-color:$success-button-border-color); }
      &.alert     { @include button-style($bg:$alert-button-bg-color, $bg-hover:$alert-button-bg-hover, $border-color:$alert-button-border-color); }
      &.warning   { @include button-style($bg:$warning-button-bg-color, $bg-hover:$warning-button-bg-hover, $border-color:$warning-button-border-color); }
      &.info      { @include button-style($bg:$info-button-bg-color, $bg-hover:$info-button-bg-hover, $border-color:$info-button-border-color); }

      &.large  { @include button-size($padding:$button-lrg); }
      &.small  { @include button-size($padding:$button-sml); }
      &.tiny   { @include button-size($padding:$button-tny); }
      &.expand { @include button-size($full-width:true); }

      &.left-align  { text-align: left; text-indent: rem-calc(12); }
      &.right-align { text-align: right; padding-right: rem-calc(12); }

      &.radius { @include button-style($bg:false, $radius:true); }
      &.round  { @include button-style($bg:false, $radius:$button-round); }

      &.disabled, &[disabled] { @include button-style($bg:$button-bg-color, $disabled:true, $bg-hover:$button-bg-hover, $border-color:$button-border-color);
        &.secondary { @include button-style($bg:$secondary-button-bg-color, $disabled:true, $bg-hover:$secondary-button-bg-hover, $border-color:$secondary-button-border-color); }
        &.success { @include button-style($bg:$success-button-bg-color, $disabled:true, $bg-hover:$success-button-bg-hover, $border-color:$success-button-border-color); }
        &.alert { @include button-style($bg:$alert-button-bg-color, $disabled:true, $bg-hover:$alert-button-bg-hover, $border-color:$alert-button-border-color); }
        &.warning { @include button-style($bg:$warning-button-bg-color, $disabled:true, $bg-hover:$warning-button-bg-hover, $border-color:$warning-button-border-color); }
        &.info { @include button-style($bg:$info-button-bg-color, $disabled:true, $bg-hover:$info-button-bg-hover, $border-color:$info-button-border-color); }
      }
    }

    //firefox 2px fix
    button::-moz-focus-inner {border:0; padding:0;}

    @media #{$medium-up} {
      button, .button {
        @include button-base($style:false, $display:inline-block);
        @include button-size($padding:false, $full-width:false);
      }
    }
  }
}

.hero {
	background:linear-gradient(
      rgba(0, 0, 0, 0.45), 
      rgba(0, 0, 0, 0.45)
    );
	background-size: cover;
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-o-background-size: cover;
	width:100%;
	position:static;
	padding:1rem;
	
}


.hero.light{
	background: $white;
}

.hero-text{
	padding-top:20px;
}


.hero-text {
	h1, h2 {
		color: $white;		
		line-height: 1.2;
	}
	li {	
		color: $white;
		line-height: 1.8rem;
		font-size: 1.3rem;
		font-weight:600;
		margin-bottom: 1.2rem;
		
	}

}

.light .hero-text{
	h1, h2, li{
		color: $secondary-text;
	}
}

.hero-form{
	background-color: $carrot;
	p, h3{
		color: $white;
	}
}

.value-proposition{
	background: $lt-carrot;
	padding: 3rem 0 3rem 0;
	margin-bottom: 2rem;
	h1, h2, h3, h4, p, a, li{
		color: $white;
		margin-bottom: 0rem;
	}
	a:hover{
		text-decoration: underline;
		color: $white;
	};
	
}

.value-proposition-cta{
	background: $white;
	padding: 2rem 0 2rem 0;
	margin-bottom: 0;
	h1, h2{
		color:$primary-text;
	}
}

.secondary-cta{
	margin-top: 2rem !important;
	margin-bottom: 2rem !important;
}

.article-info{
	background: $lt-carrot;
	padding: 2.5rem 0 2.5rem 0;
	margin-bottom: 2rem;
	h1, h2, h3, p, a{
		color: $white;
	}
	a:hover{
		text-decoration: underline;
		color: $white;
	};	
}

.contact-form{
	p, h3{
		color: $primary-text;
	}
	label{color: $secondary-text;}
}



.round{
  /* Safari 3-4, iOS 1-3.2, Android 1.6- */
  -webkit-border-radius: 50%; 

  /* Firefox 1-3.6 */
  -moz-border-radius: 50%; 

  /* Opera 10.5, IE 9, Safari 5, Chrome, Firefox 4, iOS 4, Android 2.1+ */
  border-radius: 50%;
}

.vcard{border:none !important;}
.section{
	border-bottom: 1px solid $divider;
	}
.section-break{
	margin-bottom: 2rem !important;
}

.icon, .icon:hover, .icon:focus{
	padding:rem-calc(4) rem-calc(16);
	color:$white;
	}
.inline-list-center{margin-left: auto !important; margin-right:auto !important;}

.call-to-action{
	background-color: $lt-carrot;
	padding: 2rem 0 2rem 0;
	margin-bottom: 2rem;
	h1, h2, h3, h4, p{
		color: $white;
	}
}

.callout{
	font-size:1.5rem;
	font-style: italic;
	color: $secondary-text;
}

.name img{
	max-height:44px;
	padding-top:2px;
	width:auto;
	height:auto;
}
h1{font-weight: 200 !important;}

img {max-width:100%; height:auto; width:100%;}

.footer{border-top: 1px solid $divider; padding: 1em 0 1em 0;}
.copyright{color: $secondary-text;}
.youtube{padding-bottom:49.5% !important;}


.carrot{color: $carrot !important;}
.dk-carrot{color: $dk-carrot;}
.lt-carrot{color: $lt-carrot;}
.carrot-green{color: $carrot-green;}
.dk-carrot-green{color: $dk-carrot-green;}
.lt-carrot-green{color: $lt-carrot-green;}

li#tag-line > span.carrot{display:inline;}


.social-share .inline-list li:first-child{
	margin-left:0px;
}

@media #{$small-only} { 
	.social-share .inline-list li{
		width:100%;
		margin-bottom:1rem;
		text-align:center;
		margin-left:0px;
		padding-top:.5rem;
		padding-bottom: .5rem;
	}
}

/*
.top-bar-section a, ul.dropdown a {
	color: $lt-carrot !important;
    display: block;
    font-size: 0.8125rem;
    font-weight: bold !important;
    padding-left: 1rem;
    padding: 12px 0 12px 1rem;
    text-transform: none;
    width: 100%;
}
ul.dropdown a:hover{
	color: $dk-carrot;
};
*/
.article-listing{
	margin-top: 1.5rem !important;
	margin-bottom: 1.5rem !important;
}

.article-listing:not(:last-child){
	border-bottom: 1px solid $divider;
}

.published{
	font-size:.8rem;
	color: $secondary-text;
	text-transform: uppercase;
}

/* * Signup Subscribe Bar */ 
.signup-bar { 
	background-color: $lt-carrot; 
	position: fixed; 
	z-index: 2; 
	width: 100%; 
	box-shadow: 0 0 10px rgba(0,0,0, 0.35); 
	height: 60px; 
	bottom: -60px; 
	-webkit-animation: signup 2s ease forwards; 
	-moz-animation: signup 2s ease forwards; 
	animation: signup 2s ease forwards; 
	-webkit-animation-delay: 3s; 
	-moz-animation-delay: 3s; 
	animation-delay: 3s; 
	padding: .8rem 0px 0px 0px; 
	color: $white;
} 

@-webkit-keyframes signup { 
	100% { 
		-webkit-transform: translate(0, -100%); 
		transform: translate(0, -100%);
	} 
} 
@-moz-keyframes signup { 
	100% { 
		transform: translate(0, -100%); 
	} 
} 
@keyframes signup { 
	100% { 
		transform: translate(0, -100%); 
	}
} 

.signup-bar .mc4wp-success { 
	color: $white; 
	font-weight: bold; 
} 

.signup-bar input[type=submit] { 
	background-color: $carrot-green; 
	border:none;
	color: $white;
	width: 100%;
	padding: 0.4rem 0px 0px 0px;
	height:34px;
	font-size:.8rem;
	margin-bottom: 0px;
	box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.25);
	transition: background-color 0.3s ease;
} 
.signup-bar input[type=email]{
	border:none;
	height:34px;
	font-size:.8rem;
	padding-bottom: 0px;
	margin-bottom: 0px;
	vertical-align:middle;
}
.signup-bar label{
	font-size:.8rem;
	padding-top:.5rem;
}

.collapse{
	padding-left: 0px;
	padding-right: 0px;
}

.rss-sub{
	font-size:.75rem;
	line-height: .75rem;
	text-align:center;
	border-right: 1px solid $white;
	padding-right: 1.87rem;
	padding-top: 0.5rem;
}

.rss-sub i{
	font-size:1.75rem !important;
	line-height:1.75rem;
}
.rss-sub a, .rss-sub a:hover{
	color: $white;
}
.close i{
	font-size:26px !important;
    text-align: center;
//	width:28px;
//	height:28px;
	display: table-cell;
	position: absolute;
	width: 100%;
	height: 100%;
}


.signup-bar .close { 
	color: $lt-carrot;
	float:right;
	background-color: $secondary-text;
	border-radius:50%;
	cursor: pointer;
	border: 3px solid $lt-carrot;
	width:100%;
	max-width:2rem;
	position:relative;
}
.signup-bar .close:after{
  content: "";
  display: block;
  padding-bottom: 100%;	
}
.sub-text{
	padding-top:0.5rem;
}

.primary-text{
	color: $primary-text;
}

.table-text-top th, .table-text-top td{
	vertical-align:top;
	padding:.4rem .4rem;
}

th{
	border-bottom: solid 1px $dk-carrot;
	background-color: $lt-carrot; 
	color: $white;	
}

.bg-subtle{background-color:$ghost;}


div.quadrant {
float: left;
width: 50%;
height: 50%;
margin: 0;
padding: .5em;
border-style: solid;
border-color: black;
}
div#onepoint2 {
border-width: 0 0 1px 1px;
margin: 0 0 -1px -1px;
}
div#twopoint1 {
border-width: 1px 1px 0 0;
margin: -1px -1px 0 0;
clear: left;
}


.vertical-text{
	white-space: nowrap;
	border-right:1px solid $divider;
}

.vertical-text div{
	transform: rotate(90deg);
	transform-origin: left top 0;
	float:right;
}

.pattern{
	background-color: $carrot;
	background-image: url('/images/background-pattern.png');
}

#tag-line{
	margin-top: 1.3rem;
	margin-left: .5rem;
	color: $secondary-text;
	font-style: italic;
	font-size: .8rem;
}

.emphatic{
	font-size: rem-calc(20);
	font-weight:300;
}

a:hover.hover-dropdown{
	cursor: default;
	color: $lt-carrot;
}

//Rotating Homepage Text

.rw-sentence span {
    white-space: nowrap;
}
.rw-words {
//  display: inline;
 //   width: 200px;
//	 max-width:100%;
//    height: 1rem;
    font-style: italic;
}

.rw-words span {
    position: absolute;
    opacity: 0;
    overflow: hidden;
	color: #FFFFFF;
	width:100%;
	left: 0px;
}
.rw-words-1 span {
    animation: rotateWordsFirst 12s linear infinite 0s;
}
.rw-words span:nth-child(2) {
    animation-delay: 3s;
}
.rw-words span:nth-child(3) {
    animation-delay: 6s;
}
.rw-words span:nth-child(4) {
    animation-delay: 9s;
}
@keyframes rotateWordsFirst {
    0% {
    opacity: 1;
    animation-timing-function: ease-in;
    height: 0px;
}
8% {
    opacity: 1;
    height: 60px;
}
19% {
    opacity: 1;
    height: 60px;
}
25% {
    opacity: 0;
    height: 60px;
}
100% {
    opacity: 0;
}
}@keyframes rotateWordsSecond {
    0% {
    opacity: 1;
    animation-timing-function: ease-in;
    width: 0px;
}
10% {
    opacity: 0.3;
    width: 0px;
}
20% {
    opacity: 1;
    width: 100%}
27% {
    opacity: 0;
    width: 100%}
100% {
    opacity: 0;
}
}